<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BUUOJ CTF</title>
      <link href="/2020/06/09/BUUOJ%20CTF/"/>
      <url>/2020/06/09/BUUOJ%20CTF/</url>
      
        <content type="html"><![CDATA[<h1 id="BUUOJ"><a href="#BUUOJ" class="headerlink" title="BUUOJ"></a><em>BUUOJ</em></h1><h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9opzsedcj307q02g3yd.jpg" alt=""></p><p>查看源码，发现提升，打开source.php页面</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfm4uifequj30no0oxdhl.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfm4uzwofrj30rp07zt9a.jpg" alt=""><br>看到题目php代码</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9otp9bbhj30k902qweh.jpg" alt=""></p><p>打开hint.php页面，发现提示。<br>回到source.php页面，函数代码中有四个if语句</p><pre><code>第一个if语句对变量进行检验，要求$page为字符串，否则返回false第二个if语句判断$page是否存在于$whitelist数组中，存在则返回true第三个if语句判断截取后的$page是否存在于$whitelist数组中，截取$page中&apos;?&apos;前部分，存在则返回true第四个if语句判断url解码并截取后的$page是否存在于$whitelist中，存在则返回true若以上四个if语句均未返回值，则返回false</code></pre><p>有三个if语句可以返回true，第二个语句直接判断$page，不可用<br>第三个语句截取’?’前部分，由于?被后部分被解析为get方式提交的参数，也不可利用<br>第四个if语句中，先进行url解码再截取，因此我们可以将?经过两次url编码，在服务器端提取参数时解码一次，checkFile函数中解码一次，仍会解码为’?’，仍可通过第四个if语句校验。（’?’两次编码值为’%253f’）,构造url：<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9p1nmo3rj30rv037wej.jpg" alt=""><br>无返回值，由于我们不知道ffffllllaaaagggg文件的具体位置，只能依次增加../，最终在<img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9p3bfc4bj30x205r750.jpg" alt=""><br>中成功回显flag</p><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9p6owmc0j30x304waah.jpg" alt=""><br>该题考查<strong>堆叠注入</strong><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9pd5u3nfj31bi0520t3.jpg" alt=""><br>输入1’提交页面不正常</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9peqna3ij30cd0hk750.jpg" alt=""></p><p>输入1’ or 1=1 #，页面变为正常，说明存在注入。</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9pj0d3nzj30hi04s0st.jpg" alt=""></p><p>输入1’ order by 3#，页面出现错误，说明只有两个字段</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9pl8yxfrj30mn04jq2x.jpg" alt=""></p><p>使用union select查询，发现很多语句被过滤。</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9pso2bowj30kg0mx0tm.jpg" alt=""></p><p>使用堆叠注入1’;show databases; #列出数据库名。</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9pvbzlxlj30hx0gmgma.jpg" alt=""></p><p>接着使用1’;show tables;#查询出表</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9px8yi8cj309g0o6dgo.jpg" alt=""></p><p>使用1’;show columns from words;#查出表words的字段</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9q1mxqi0j30bk0h3q3i.jpg" alt=""></p><p>然后使用1’;show columns from <code>1919810931114514</code>;#查出表1919810931114514的字段(如果表名为纯数字，则需要加上`),从而发现flag字段。</p><p>因为这里有两张表，会县内容肯定是从word这张表中回显的，那我们怎么才能让它回显flag所在的表呢</p><p>内部查询语句类似 : select id, data from word where id =</p><p>(这里从上面的对word列的查询可以看到它是有两列，id和data)</p><p>然后1919810931114514只有一个flag字段</p><p>这时候虽然有强大的正则过滤，但没有过滤alert和rename关键字</p><p>这时候我们就可以已下面的骚姿势进行注入：</p><p>1.将words表改名为word1或其它任意名字</p><p>2.1919810931114514改名为words</p><p>3.将新的word表插入一列，列名为id</p><p>4.将flag列改名为data</p><p>构造payload</p><p>1’;rename table words to word1;rename table <code>1919810931114514</code> to words;alter table words add id int unsigned not Null auto_increment primary key; alert table words change flag data varchar(100);#</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9q65ogotj30io06mq32.jpg" alt=""></p><p>然后使用1’ or 1=1 #查询获得flag.</p><h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><p>同样是考察堆叠注入</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9qe0hjvej30g7046746.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9qhhl6mej30eo04q0sn.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9qhqxmofj30ev04x747.jpg" alt=""></p><p>输入1发现页面有回显，输入1-1数值改变，说明是数值型的注入。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9qkfyws7j31cl044wen.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9qkzny0hj30er03mwef.jpg" alt=""></p><p>依次查询数据库并查询出表，并发现Flag表</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9qnjgiugj30fr032gli.jpg" alt=""></p><p>但发现from Flag被过滤所以不能直接读取flag</p><p>看了别人的题解知道本题的原理</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9qpv9tp0j30cy01kdfn.jpg" alt=""></p><p>解题思路1：</p><p>payload：<img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9qtrqv9hj301e00y0dl.jpg" alt=""></p><p>查询语句：<img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9qt6po3gj307f00xmwx.jpg" alt=""></p><p>解题思路2：</p><p>payload:1;</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gf9qsq9fjbj30b100uwea.jpg" alt=""></p><p>解析：</p><pre><code>在oracle 缺省支持 通过 ‘ || ’ 来实现字符串拼接。但在mysql 缺省不支持。需要调整mysql 的sql_mode模式：pipes_as_concat 来实现oracle 的一些功能。</code></pre><h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><p>本题考查<strong>ssti(服务端模板注入)</strong><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaa6dsmr9j309h043745.jpg" alt=""></p><p>打开页面发现3个文件</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaa8gc7ajj307n02h742.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaaeo8xoej30x601m0ss.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaa8smxbmj304w029we9.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaaf34iioj30wh01vglo.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaa91n0zhj30b9026glf.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaafapucfj30ux01qmx7.jpg" alt=""></p><p>依次打开三个txt文件得到提示，所以需要知道cookie_secret。</p><p><a href="https://blog.csdn.net/qq78827534/article/details/80792514" target="_blank" rel="noopener" title="render函数介绍">https://blog.csdn.net/qq78827534/article/details/80792514</a></p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaai2hq1uj30uu01w0ss.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaaiwi6ifj308f036dfm.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaaj6kp2cj30jz025mx4.jpg" alt=""></p><p>只修改文件名不修改文件hash值，报错。</p><p>可以看到在报错的url中参数msg值为Error，然后界面就显示Error。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaaovcufmj30xt0330sy.jpg" alt=""><br>继续修改证实此处存在模板注入<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaaqglp4mj31ap0h9403.jpg" alt=""><br>在这里我们应该可以得到cookie_secret</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaas3fnwdj30b9026glf.jpg" alt=""></p><p>然后照着hint解出文件得hash值</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaax5makhj314h0hk3zl.jpg" alt=""></p><p>从而获得flag。</p><h2 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfab2fglexj31540jsgzp.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfab3fdaq7j30cx0bc42b.jpg" alt=""></p><p>尝试万能密码<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfab4aph2oj30pp0d8qa3.jpg" alt=""></p><p>获得flag.</p><h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfab99x02cj315207oglp.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfab8totonj30ln066aap.jpg" alt=""></p><p>查看源代码，发现提示所以需要绕过WAF。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfabgnz7w1j30v30bpt9s.jpg" alt=""></p><p>查看calc.php页面，显示了waf的法则。</p><p>进行绕waf，首先了解一下php的解析规则，当php进行解析的时候，如果变量前面有空格，会去掉前面的空格再解析，那么我们就可以利用这个特点绕过waf。</p><p>num被限制了，那么’  num’呢，在num前面加了空格。waf就管不着了，因为waf只是限制了num，waf并没有限制’  num’，当php解析的时候，又会把’   num’前面的空格去掉在解析，利用这点来上传非法字符</p><p>构造payload来查看目录，用chr转化成ascll码进行绕过<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfabuatrf6j31gu0hgtaf.jpg" alt=""><br>发现 string(5) “f1agg”<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfabyjc1ynj31250h9my7.jpg" alt=""><br>查看flag。</p><h2 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfac0kkj6ej30ek07yjrq.jpg" alt=""></p><p>查看源代码，发现提示<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfac1m4l3kj31820ejgmy.jpg" alt=""></p><p>构造payload获得flag。</p><h2 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h2><p>存在以下三种解法：</p><pre><code>flask session 伪造unicode欺骗条件竞争</code></pre><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaglrpya9j30mk0h7js1.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfagmn0wcij30ia09h3yk.jpg" alt=""></p><p>注册一个test用户，登录。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfagoh0dvwj30ry08udh3.jpg" alt=""><br>在修改密码的源码中发现提示。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfagqd7i8tj30m70avaay.jpg" alt=""></p><p>下载文件</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaijmd63ej30jw03edfv.jpg" alt=""></p><p>是一个flask项目，那就直接先奔路由去看一下，打开route.py，看一下index的注册函数代码</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaikmtd1aj30qx09at9f.jpg" alt=""><br>发现index注册函数没做什么处理，直接返回index.html渲染模版，于是我们看一下templates/index.html代码</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaiovsvsej30ql0ndmza.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaip70juwj30pc0fyt9w.jpg" alt=""></p><p>发现真的是要登录成admin才能得到flag。于是继续看向route.py文件，看看login和change password的注册函数处理代码是怎么写的。</p><p><strong>解法一 —— flask session 伪造</strong></p><p>我们可以用python脚本把flask的session解密出来，但是如果想要加密伪造生成我们自己的session的话，还需要知道flask用来签名的SECRET_KEY，在github源码里找找，可以在config.py里发现下面代码</p><p><a href="https://github.com/noraj/flask-session-cookie-manager" target="_blank" rel="noopener" title="flask_session_manage">https://github.com/noraj/flask-session-cookie-manager</a><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaixw55qtj30pa05qq39.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfalpci52zj30og04oq36.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfalpr57d2j30ml05xwjt.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfalqobraoj30mj05c42c.jpg" alt=""></p><p>用得到的cookie值替换掉index页面的cookie值，即可成功伪造session，”变成admin”，得到flag</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfaltk9yfnj30qb0bkt95.jpg" alt=""></p><p><strong>法二 —— Unicode欺骗</strong></p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfamywjzioj30d502jglg.jpg" alt=""><br>这里用到了nodeprep.prepare函数，而nodeprep是从twisted模块中导入的from twisted.words.protocols.jabber.xmpp_stringprep import nodeprep，在requirements.txt文件中，发现这里用到的twisted版本是Twisted==10.2.0，而官网最新版本为19.2.0(2019/6/2)，版本差距这么大，估计是存在什么漏洞。</p><p>原理就是利用nodeprep.prepare函数会将unicode字符ᴬ转换成A，而A在调用一次nodeprep.prepare函数会把A转换成a。<br>所以当我们用ᴬdmin注册的话，后台代码调用一次nodeprep.prepare函数，把用户名转换成Admin，我们用ᴬdmin进行登录，可以看到index页面的username变成了Admin，证实了我们的猜想，接下来我们就想办法让服务器再调用一次nodeprep.prepare函数即可。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfan8syszjj30cq09j3yj.jpg" alt=""></p><p>我们发现在改密码函数代码里，也用到了nodeprep.prepare函数，也就是说，我们在这里改密码的话，先会把username改为admin，从而改掉admin的密码。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfana7tvutj30om0as74g.jpg" alt=""><br>然后用admin和改的密码的登录，即可获取flag。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfanbj04yrj30sz0bpt95.jpg" alt=""></p><p><strong>解法三 —— 条件竞争</strong><br><a href="https://www.jianshu.com/p/f92311564ad0" target="_blank" rel="noopener" title="HCTF2018-admin">https://www.jianshu.com/p/f92311564ad0</a></p><h2 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfanstiw0oj30sy04ggmf.jpg" alt=""><br>查看源码发现提示</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfantton39j30lg0cd74g.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfanujro2lj30ev087dft.jpg" alt=""></p><p>继续点击，发现什么也没有，根据提示抓包分析。</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfanvn1llgj307804va9x.jpg" alt=""></p><p>发现php页面，打开该页面<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbe5son5aj30uk0aaaap.jpg" alt=""><br>发现是文件包含漏洞。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbefqitdfj30s7092aa9.jpg" alt=""><br>但是打开flag.php并不能看到flag，所以flag应该是写在php代码里面</p><p>传入的文件进行了过滤，但没有过滤filter，所以可以用php://filter来获取文件。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbebnttfzj31hc096abe.jpg" alt=""><br>获取到flag.php的base64编码，进行解码获得flag。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbee8u6y0j30m60880tg.jpg" alt=""></p><h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbetawh5jj308g048mx2.jpg" alt=""></p><p>发现是文件上传漏洞，于是想到上传一句话木马。</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbeulv6d1j307n04pwef.jpg" alt=""></p><p>上传一句话木马后发现&lt;?被过滤了，所以不能使用&lt;?php,所以使用其他的方法构造一句话木马，如script脚本<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbfoa6kc7j30hg00wa9v.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbfp2jc2oj308v059mx5.jpg" alt=""></p><p>上传之后发现错误提示，所以需要绕过exif_imagetype。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbfrgfz2nj30hf01m0sm.jpg" alt=""></p><p>所以在一句话木马前加上GIF89a再上传。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbfuz0qq3j30np05sgly.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbfwrx895j30ae04wq2s.jpg" alt=""></p><p>然后用蚁剑连接index.php页面，发现不能连接，所以是木马没有执行。</p><p>看了题解后发现这题还有一个知识点就是<strong>.user.ini</strong><br><a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html" target="_blank" rel="noopener" title=".user.ini">https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html</a></p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbg2rycpdj309w01tmwz.jpg" alt=""><br>于是创建一个.user.ini文件并将.user.ini和aaa.jpg文件上传<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbg4unow1j30tl05m3yw.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbg63dc06j30ca03zmx5.jpg" alt=""></p><p>然后蚁剑连接获得flag。</p><h2 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbgko45ufj30rh0i5woi.jpg" alt=""><br>尝试万能密码<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbgm3qdh3j30tj09kgpl.jpg" alt=""><br>登录成功，说明存在注入点</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbgpg5cd6j30eu03iq32.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbgpu8llwj30sy09fgp3.jpg" alt=""><br>说明有3个字段。</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbgr5czwlj30f80a4dj7.jpg" alt=""></p><p>在用户名方框里没有注入成功，在密码方框里注入成功</p><p>在密码框中使用<br>admin’ union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database() #<br>列出表名<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbh26o28hj30lb0a0wi4.jpg" alt=""></p><p>接着使用<br>admin’ union select 1,2,group_concat(column_name) from information_schema.columns where table_name=”l0ve1ysq1” #<br>列出字段</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbh9yytzxj30m109z420.jpg" alt=""></p><p>最后使用<br>admin’ union select 1,2,group_concat(password) from l0ve1ysq1 #<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbhbpxpejj30wy0d2jxu.jpg" alt=""></p><p>获得flag。</p><h2 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbl86nvixj30oj07g3zk.jpg" alt=""><br>根据提示，页面有备份文件</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbl7ooiwbj30aw011weh.jpg" alt=""></p><p>使用dirsearch扫描，发现备份文件<a href="http://www.zip" target="_blank" rel="noopener">www.zip</a><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbl9scevgj30l804gwep.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfblb4esaxj30og0o3gn8.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfblbvo3qlj30b403x3yh.jpg" alt=""></p><p>从class.php和index.php可知，该题是反序化漏洞。代码审计可知username应为admin，password应为100才能获得flag。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfblhrdqzsj30j00fl75c.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfblitplw1j30lg01ya9x.jpg" alt=""></p><p>将代码反序化</p><p>public、protected与private在序列化时的区别和__wakeup()方法绕过参考：<br><a href="https://www.cnblogs.com/wangtanzhi/p/12193930.html" target="_blank" rel="noopener" title="参考链接">https://www.cnblogs.com/wangtanzhi/p/12193930.html</a></p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfblqidxzoj314i0hddj5.jpg" alt=""><br>构造payload获得flag，也可以参考上面的参考链接中<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfblrwxv7sj30na01q0sn.jpg" alt=""></p><p>用python传值获得flag</p><h2 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfblwywrjlj30lt0980sw.jpg" alt=""></p><p>发现是一句话木马，直接用菜刀连接</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfblyno71fj30gj08e74n.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfblzgek3aj30f403kq2y.jpg" alt=""></p><p>然后获得flag。</p><h2 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbm49rup2j30jw06iglm.jpg" alt=""></p><p>查看源码，发现提示<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbm5hp0hdj319b09pn3u.jpg" alt=""><br>想到抓包，直接改header头信息即可，我们可以通过使用Referer头来修改<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbm8kwmz8j30yn0ha76b.jpg" alt=""><br>修改之后提示说使用Syclover浏览，于是修改User-Agent<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbma2trtuj30yp0gftan.jpg" alt=""><br>根据提示，需要修改X-Forwarded-For为127.0.0.1<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbmcnwclyj30y70g940e.jpg" alt=""><br>从而获得flag。</p><h2 id="GKCTF2020-CheckIN"><a href="#GKCTF2020-CheckIN" class="headerlink" title="[GKCTF2020]CheckIN"></a>[GKCTF2020]CheckIN</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbmr1prhpj30ne0dbdgp.jpg" alt=""></p><p>审计代码发现Ginkgo可以传参，于是想到可以传一句话木马，审计代码可知要把$this-&gt;code进行base64加密。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbnef4v15j30qo0213yl.jpg" alt=""></p><p>所以Ginkgo传入加密后的<strong>@eval($_POST[value]);</strong><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbng00sipj30f60c774p.jpg" alt=""></p><p>用蚁剑连接<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbnuh85awj30jw076taw.jpg" alt=""></p><p>直接利用github上的exploit:<br><a href="https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php" target="_blank" rel="noopener" title="exploit">https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php</a><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbnxf3636j30gd07wmxj.jpg" alt=""><br>改为执行/readflag。<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbnyikohcj30s90fomy3.jpg" alt=""><br>上传到服务器</p><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbo3njuclj30zr066t9l.jpg" alt=""><br>构造payload：?Ginkgo=include(‘/tmp/exploit.php’);并将include(‘/tmp/exploit.php’);用base64加密，执行获得flag。</p><h2 id="GKCTF2020-cve版签到"><a href="#GKCTF2020-cve版签到" class="headerlink" title="[GKCTF2020]cve版签到"></a>[GKCTF2020]cve版签到</h2><p>由hint知识<strong>cve-2020-7066，ssrf</strong>漏洞<br><a href="https://security-tracker.debian.org/tracker/CVE-2020-7066" target="_blank" rel="noopener" title="CVE-2020-7066">https://security-tracker.debian.org/tracker/CVE-2020-7066</a><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbo8gz2aaj30mi040t8s.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbo9eot9fj30rc0hu0th.jpg" alt=""><br>点击View CTFHub发现什么也没有<br>根据漏洞可知存在\0截断。<br><a href="https://blog.csdn.net/weixin_45485719/article/details/106432960?fps=1&locationNum=2" target="_blank" rel="noopener" title="cve-2020-7066简单解析">https://blog.csdn.net/weixin_45485719/article/details/106432960?fps=1&amp;locationNum=2</a><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbofn9rapj309h014q2q.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbodclbhzj30u20gygn7.jpg" alt=""><br>根据提示知应该改为127.0.0.123<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfboejavs8j30ti0hh75x.jpg" alt=""><br>从而获得flag。 </p><h2 id="GKCTF2020-老八小超市儿"><a href="#GKCTF2020-老八小超市儿" class="headerlink" title="[GKCTF2020]老八小超市儿"></a>[GKCTF2020]老八小超市儿</h2><p><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbokpmsh8j30ze0bxjya.jpg" alt=""><br>从图中可知是ShopXO漏洞<br>参考<br><a href="http://www.nctry.com/1660.html" target="_blank" rel="noopener" title="ShopXO">http://www.nctry.com/1660.html</a><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbonczmoqj30vx0gracr.jpg" alt=""><br>进入后台登录界面，用admin,shopxo登录后台<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbopongy4j30si0l9tdo.jpg" alt=""><br>下载默认主题<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbottukynj30qw06naal.jpg" alt=""><br>将写好的一句话木马文件直接拖入压缩包中(注意：不能先解压然后将文件放进去再压缩，这样文件就会失效)<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbow18efvj30lf0ea0tk.jpg" alt=""><br>然后上传木马文件，用蚁剑连接<br>地址是：<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbozq44m5j30lu01oaa1.jpg" alt=""><br>在目录下看到<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbp0wk696j30ko02it8o.jpg" alt=""><br>告诉我们flag在/root下，并且flaghint中的时间每隔一分钟会变化<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbp394dfvj30ih03ogln.jpg" alt=""><br>根据auto.sh找到makeflaghint.py<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbp78g5shj30a805dt8x.jpg" alt=""></p><p>发现有修改权限，且有root的执行权限，能每60秒刷新hint文件。</p><p>rb+ 读写打开一个二进制文件，只允许读写数据。<br><a href="https://blog.csdn.net/guyue6670/article/details/6681037" target="_blank" rel="noopener" title="fopen">https://blog.csdn.net/guyue6670/article/details/6681037</a><br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbpc2izasj30a006ct90.jpg" alt=""></p><p>于是修改代码能读取flag并写入flag.hint文件中<br><img src="http://ww1.sinaimg.cn/large/007u7C9Rgy1gfbpdoahgmj30bp03wq2z.jpg" alt=""></p><p>等待60秒查看获得flag。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
